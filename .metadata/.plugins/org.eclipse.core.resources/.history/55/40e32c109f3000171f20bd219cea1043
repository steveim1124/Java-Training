import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InventoryController {

	// private List<Product> productList = new ArrayList<>();
	// private Inventory inventory;

	Map<Product, Integer> productStock = new HashMap<>();
	List<String> productHistory = new ArrayList<>();

	public void addProduct(Product product) {
		if (!checkIfProductExists(product.getCode(), product.getDescription())) {

			// do adding product with inventory controller functionality
			productStock.put(product, 0);

			productHistory.add("Product '" + product.getCode() + "' of description '" + product.getDescription()
			+ "' has been added.");
			System.out.println("Product '" + product.getCode() + "' of description '" + product.getDescription()
					+ "' has been added.");
		} else
			System.out.println("Cannot add product code " + product.getCode() + " as it already exists");
	}

	public void addstock(Product product, Integer qtyIn) {
		if (checkIfProductExists(product.getCode(), product.getDescription())) {
			int currentStock = productStock.get(product);
			productStock.replace(product, currentStock + qtyIn);
			productHistory.add("Product '" + product.getCode() + "' of description '" + product.getDescription()
					+ "' stock increased by " + qtyIn);
		} else
			System.out.println("Product " + product.getCode() + " does not exist");
	}

	public void deductstock(Product product, Integer qtyOut) {
		if (!checkIfProductExists(product.getCode(), product.getDescription())) {
			int currentStock = productStock.get(product);
			if (currentStock >= qtyOut) {
				productStock.replace(product, currentStock - qtyOut);
				productHistory.add("Product '" + product.getCode() + "' of description '" + product.getDescription()
						+ "' stock decreased by " + qtyOut);
			} else {
				System.out.println(
						"Insufficient stock of product " + product.getCode() + ". Current stock is " + currentStock);
			}
		} else
			System.out.println("Product " + product.getCode() + " does not exist");
	}

	private boolean checkIfProductExists(String code, String description) {
		boolean productExists = false;
		// System.out.println("product list = " +
		// productList.get(0).toString());
		// if (productList.indexOf(code) != -1){
		// if (productList.contains(code)){
		System.out.println("code = " + code);
		if (!productStock.isEmpty()) {
			int productCount = productStock.size();
//			System.out.println("before = " + productStock.get(code));
			for (int i = 0; i < productCount; i++) {
				if (productStock.get(code).equals(code)) {
//					if (productStock.containsKey(code)) {
					productExists = true;
					System.out.println("in here");
				}
			}
			System.out.println("after = " + productStock.keySet().toString());
		}
		return productExists;
	}

	public void showStockQty(Product product, InventoryController inventoryController) {
//		System.out.println(
//				"Stock qty for product " + product.getCode() + " is " + inventory.showStockQty(product.getCode()));
	}

	public void showProductHistory(Product product) {
//		inventory.showProductHistory(product);

	}

}
